{"version":3,"file":"component---node-modules-morganstanley-gatsby-theme-ms-gh-pages-src-templates-index-js-content-file-path-content-index-mdx-40018773552cfb59aff6.js","mappings":"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","sources":["webpack://ms-gh-pages/./content/index.mdx","webpack://ms-gh-pages/./node_modules/@morganstanley/gatsby-theme-ms-gh-pages/src/templates/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    span: \"span\"\n  }, _provideComponents(), props.components), {Hero, Article} = _components;\n  if (!Article) _missingMdxReference(\"Article\", true);\n  if (!Hero) _missingMdxReference(\"Hero\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Hero, {\n    title: \"Crossroads\"\n  }, React.createElement(_components.p, null, \"Crossroads is a dotnet core commandline tool packager for developers. This is\\na generic solution to host any application within Crossroads package\\nexecutable and further launches applicationâ€™s executable. Developers will\\nspecify arguments such as name, icon, version etc for branding during the\\npackage generation. The specified argument name will be used to rebrand the\\ninternal application.\"), React.createElement(_components.img, {\n    src: \"https://badgen.net/badge/Lifecycle/Active/green\",\n    alt: \"Lifecycle Active\"\n  }), \"\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/morganstanley/Crossroads/actions/workflows/continuous-integration.yml\"\n  }, React.createElement(_components.img, {\n    src: \"https://github.com/morganstanley/Crossroads/actions/workflows/continuous-integration.yml/badge.svg\",\n    alt: \"CI\"\n  })), React.createElement(\"a\", {\n    variant: \"outlined\",\n    href: \"https://github.com/morganstanley/Crossroads\"\n  }, React.createElement(_components.p, null, \"Project Repo\"))), \"\\n\", React.createElement(\"section\", {\n    className: \"content\"\n  }, React.createElement(Article, {\n    title: \"Background\"\n  }, React.createElement(_components.p, null, \"Crossroads is a tool to generate a single executable file to host any application and its content. It is an important component of the Morgan Stanley Modern Desktop Development Platform called ComposeUI. While .NET applications do have a native option to be self contained, this tool brings that feature to Node.js, Python, Java, etc applications as well. This way applications can be distributable without requiring local installation or an app store. Applications can be packaged for both Windows and Linux by using just one tool.\")), React.createElement(Article, {\n    title: \"Why Use Crossroads?\"\n  }, React.createElement(_components.p, null, \"Crossroads allows you to:\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"create an executable package.\"), \"\\n\", React.createElement(_components.li, null, \"customise your package with a name, icon, version and other attributes\"), \"\\n\", React.createElement(_components.li, null, \"run applications through crossroads generated package\"), \"\\n\")), React.createElement(Article, {\n    title: \"Alternatives\"\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Electron Packager\"), \" - it only focuses on Electron based applications\"), React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Electron Forge\"), \" - it only focuses on Electron based applications\"), React.createElement(_components.p, null, React.createElement(_components.strong, null, \".NET Packager\"), \" - it only focuses on .NET based applications\"), React.createElement(_components.p, null, React.createElement(_components.strong, null, \"PyInstaller\"), \" - it only focuses on Python based applications\")), React.createElement(Article, {\n    title: \"Getting Started\"\n  }, React.createElement(_components.p, null, \"To install crossroads as a global dotnet tool:\"), React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\">dotnet tool install <span class=\\\"token operator\\\">-</span>g MorganStanley<span class=\\\"token punctuation\\\">.</span>Crossroads</code></pre></div>\"\n    }\n  }), React.createElement(_components.p, null, \"To get the list of available commands:\"), React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\">crossroads <span class=\\\"token operator\\\">--</span>help</code></pre></div>\"\n    }\n  }))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/Crossroads/Crossroads/site/content/index.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/layout';\nimport PageHead from '../components/page-head';\nimport {siteFragment} from '../fragments/site';\nconst PageTemplate = ({data, location, children, pageContext}) => {\n  return React.createElement(Layout, {\n    data: data,\n    location: location,\n    menu: pageContext.menu\n  }, React.createElement(\"div\", {\n    className: \"main home-main\"\n  }, children));\n};\nPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data, pageContext}) => {\n  const title = `${data.site.siteMetadata.title}`;\n  return React.createElement(PageHead, {\n    title: title\n  }, React.createElement(\"meta\", {\n    name: \"description\",\n    content: pageContext.description\n  }));\n};\nexport const pageQuery = graphql`\n  query {\n    site {\n      ...SiteMetadata\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","img","a","ul","li","strong","span","_provideComponents","components","Hero","Article","_missingMdxReference","React","title","src","alt","href","variant","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","id","component","Error","PageTemplate","_ref","data","location","children","pageContext","Layout","menu","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","site","siteMetadata","PageHead","name","content","description"],"sourceRoot":""}