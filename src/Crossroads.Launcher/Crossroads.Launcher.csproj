<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>
		<SelfContained>true</SelfContained>
		<IsPackable>false</IsPackable>
	</PropertyGroup>
	<ItemGroup>
	  <Compile Include="..\Crossroads\Services\IProcessService.cs" Link="Services\IProcessService.cs" />
	  <Compile Include="..\Crossroads\Services\PackageOption.cs" Link="Services\PackageOption.cs" />
	  <Compile Include="..\Crossroads\Services\ProcessService.cs" Link="Services\ProcessService.cs" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="$(MicrosoftExtensionsHostingVersion)" />
		<PackageReference Include="Microsoft.Extensions.Configuration" Version="$(MicrosoftExtensionsConfigurationVersion)" />
		<PackageReference Include="System.CommandLine.Hosting" Version="$(SystemCommandLineHostingVersion)" />
		<PackageReference Include="TestableIO.System.IO.Abstractions.Wrappers" Version="$(TestableIOSystemIOAbstractionsVersion)" />
	</ItemGroup>
	<ItemGroup>
		<None Update="appsettings.json">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<Target Name="CopySingleFileHost" BeforeTargets="CopyAdditionalFiles" DependsOnTargets="ResolveFrameworkReferences">
		<ItemGroup>
			<None Include="$(SingleFileHostSourcePath)">
				<Link>%(SingleFileHostSourcePath.FileName)%(SingleFileHostSourcePath.Extension)</Link>
				<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			</None>
		</ItemGroup>
	</Target>

	<Target Name="BuildLinux" AfterTargets="AfterBuild" Condition="'$(RuntimeIdentifier)' == 'win-x64'">
		<ItemGroup>
			<LauncherLinux Include="$(ProjectPath)" />
		</ItemGroup>

		<MSBuild Projects="@(LauncherLinux)" Properties="RuntimeIdentifier=linux-x64" />
	</Target>
</Project>
